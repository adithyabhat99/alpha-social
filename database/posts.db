create database posts;
create table posts.post
(
    postid varchar(255) primary key,
    userid varchar(255) not null,
    date datetime not null,
    dateupdated datetime not null,
    location varchar(128),
    public tinyint(1) not null default '0',
    caption varchar(255)
);
create table posts.hashtags
(
    postid varchar(255) not null,
    hashtagid int(11) auto_increment primary key,
    mainuser varchar(255) not null,
    hashtag varchar(128) not null,
    foreign key (postid) references posts.post(postid) on delete cascade
);
create table posts.tags
(
    tagid int(11) auto_increment primary key,
    userid varchar(255) not null,
    mainuser varchar(255) not null,
    postid varchar(255) not null,
    foreign key (postid) references posts.post(postid) on delete cascade
);
create table posts.likes
(
    postid varchar(255) not null,
    likeid varchar(255) not null unique key,
    userid varchar(255) not null,
    mainuser varchar(255) not null,
    date datetime not null,
    foreign key (postid) references posts.post(postid) on delete cascade
);
create table posts.comments
(
    postid varchar(255) not null,
    commentid int(11) auto_increment primary key,
    userid varchar(255) not null,
    mainuser varchar(255) not null,
    date datetime not null,
    message varchar(255) not null,
    foreign key (postid) references posts.post(postid) on delete cascade
);
create table posts.reports
(
    postid varchar(255) not null,
    reportedby varchar(255) not null,
    mainuser varchar(255) not null,
    foreign key (postid) references posts.post(postid) on delete cascade
);